@model Dossiers.Models.Users

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    System.Data.DataTable dt = Dossiers.Models.Mysps.GetStudentCourses(Model.StID);
    double? tot = 0;
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Users</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.StID)

        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="Role" name="Role" class="form-control" required>
                    <option value="student">Student</option>
                    <option value="teacher">Teacher</option>
                </select>
                @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                <script>$('#Role').val('@Model.Role')</script>
            </div>
        </div>
        <p>Total: <span id="totalAmount">0</span></p>
        <div class="row">
            <div class="col-sm-12 table-responsive">
                <table class="table table-bordered table-condensed">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Days</th>
                            <th>Amount</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody class="GridBody">
                        @for (int i = 0; i < dt.Rows.Count; i++)
                        {
                            <tr id="tr_@i">
                                <td>
                                    <input type="hidden" id="Cid_@i" name="Cid" value="@dt.Rows[i]["Id"].ToString()" />
                                    <input type="text" id="Name_@i" name="Name" placeholder="Name" class="form-control" value="@dt.Rows[i]["Name"].ToString()" required />
                                </td>
                                <td>
                                    <input type="number" id="Days_@i" name="Days" placeholder="Days" class="form-control" value="@dt.Rows[i]["Days"].ToString()" required />
                                </td>
                                <td>
                                    <input type="number" id="Amount_@i" name="Amount" placeholder="Amount" class="form-control amount" value="@dt.Rows[i]["Amount"].ToString()" onkeyup="updateTotalAmount();" required />
                                </td>
                                <td class="text-center fs-20">
                                    <i class="fa fa-trash text-danger" onclick="DelRow('tr_@i','1','@dt.Rows[i]["Id"].ToString()')"></i>
                                </td>
                            </tr>

                            { tot += double.Parse(dt.Rows[i]["Amount"].ToString()); }
                        }
                    </tbody>
                    <tfoot>
                        <tr>
                            <td colspan="3"></td>
                            <td><button type="button" class="btn btn-info AddMore">Add</button></td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>


        <input type="hidden" id="DelIds" name="DelIds" />



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}


<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<style>
    .fs-20 {
        font-size: 20px;
    }
</style>

<script>
    var sno = @dt.Rows.Count;
    var totalAmount = @tot;
    $('#totalAmount').html(totalAmount);
    $('.AddMore').on('click', function () {
        var tr = `<tr id="tr_` + sno + `">
                            <td>
                                <input type="hidden" id="Cid_`+ sno +`" name="Cid" value="0" />
                                <input type="text" id="Name_`+ sno + `" name="Name" placeholder="Name" class="form-control" required />
                            </td>
                            <td>
                                <input type="number" id="Days_`+ sno + `" name="Days" placeholder="Days" class="form-control" required />
                            </td>
                            <td>
                                <input type="number" id="Amount_`+ sno + `" name="Amount" placeholder="Amount" class="form-control amount" onkeyup="updateTotalAmount();" required />
                            </td>
                            <td class="text-center fs-20">
                                <i class="fa fa-trash text-danger" onclick="DelRow('tr_`+ sno + `')"></i>
                            </td>
                        </tr>`;

        $('.GridBody').append(tr);
        sno += 1;
    });

    function DelRow(id, way = null, DataId = null) {
        debugger;
        var amountToRemove = parseInt($('#' + id).find('.amount').val()) || 0;
        $('#' + id).remove();
        totalAmount -= amountToRemove;
        $('#totalAmount').text(totalAmount);
        if (way == '1') {
            let delIds = $('#DelIds').val();
            if (delIds == '')
                $('#DelIds').val(DataId);
            else
                $('#DelIds').val(delIds + ',' + DataId);
        }
    }

    function updateTotalAmount() {
        totalAmount = 0;
        $('.amount').each(function () {
            totalAmount += parseInt($(this).val()) || 0;
        });
        $('#totalAmount').text(totalAmount);
    }
</script>